> use Madhav
switched to db Madhav
> db.create collection("Employee")
uncaught exception: SyntaxError: unexpected token: identifier :
@(shell):1:10
> db.createcollection("Employee")
uncaught exception: TypeError: db.createcollection is not a function :
@(shell):1:1
> db.createCollection("Employee")
{ "ok" : 1 }
> db.Employee.insert({Rollno:1,name:"Madhav",class:"compTE",fees:98492})
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({Rollno:2,name:"Nandkumar",class:"compTE",fees:98492})
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({Rollno:3,name:"Gururaj",class:"compSE",fees:50000})
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({Rollno:4,name:"Sanket",class:"compTE",fees:1000})
WriteResult({ "nInserted" : 1 })
> db.Employee.find().preety()
uncaught exception: TypeError: db.Employee.find(...).preety is not a function :
@(shell):1:1
> db.Employee.find().pretty()
{
 "_id" : ObjectId("634c3add4f5bc8c32b2e55ac"),
 "Rollno" : 1,
 "name" : "Madhav",
 "class" : "compTE",
 "fees" : 98492
}
{
 "_id" : ObjectId("634c3aed4f5bc8c32b2e55ad"),
 "Rollno" : 2,
Name: Madhav Lonkar Rollno:COTC41
 "name" : "Nandkumar",
 "class" : "compTE",
 "fees" : 98492
}
{
 "_id" : ObjectId("634c3b0a4f5bc8c32b2e55ae"),
 "Rollno" : 3,
 "name" : "Gururaj",
 "class" : "compSE",
 "fees" : 50000
}
{
 "_id" : ObjectId("634c3b2b4f5bc8c32b2e55af"),
 "Rollno" : 4,
 "name" : "Sanket",
 "class" : "compTE",
 "fees" : 1000
}
> db.Employee.aggregate({$group:{_id:{},sum:{$sum:"$fees"}}})
{ "_id" : { }, "sum" : 247984 }
> db.Employee.aggregate({$group:{_id:{},avg:{$avg:"$fees"}}})
{ "_id" : { }, "avg" : 61996 }
> db.Employee.aggregate({$group:{_id:{},minfees:{$min:"$fees"}}})
{ "_id" : { }, "minfees" : 1000 }
> db.Employee.aggregate({$group:{_id:{},max:{$max:"$fees"}}})
{ "_id" : { }, "max" : 98492 }
> db.Employee.aggregate({$group:{_id:{},name:{$push:"$name"}}})
{ "_id" : { }, "name" : [ "Madhav", "Nandkumar", "Gururaj", "Sanket" ] }
//Index
> db.Employee.createIndex({name:1})
{
 "numIndexesBefore" : 1,
 "numIndexesAfter" : 2,
 "createdCollectionAutomatically" : false,
 "ok" : 1
}
> db.Employee.getIndex()
uncaught exception: TypeError: db.Employee.getIndex is not a function :
@(shell):1:1
> db.Employee.getIndexs()
uncaught exception: TypeError: db.Employee.getIndexs is not a function :
@(shell):1:1
> db.Employee.getIndexes()
[
 {
 "v" : 2,
 "key" : {
 "_id" : 1
 },
 "name" : "_id_"
 },
 {
 "v" : 2,
 "key" : {
 "name" : 1
 },
 "name" : "name_1"
 }
]
>
> db.Employee.dropIndexes()
{ "nIndexesWas" : 2,
 "msg" : "non-_id indexes dropped for collection",
 "ok" : 1
}
